/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.File;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JFileChooser;
import network.mail.Account;

/**
 *
 * @author jona1993
 */
public class NewMessage extends javax.swing.JDialog {
    private Session sess;
    private Properties props;
    private MimeMessage message;
    private Account compte;
    private ArrayList<File> files;
    /**
     * Creates new form NewMessage
     */
  
    
    public NewMessage(Account c) {
        
        initComponents();
        
        compte = c;
        
        ExpeTF.setText(compte.getAddress());
        ExpeTF.enable(false);
        compte = c;
        
        ExpeTF.setText(compte.getAddress());
        ExpeTF.enable(false);
        
        files = new ArrayList<>();
        props = new Properties();
        
        
        props.put("mail.smtp.host", compte.getSMTPserver());
        props.put("file.encoding", "utf-8");
        
        if(compte.isSSL())
        {
            props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
            props.put("mail.smtp.socketFactory.port", "465");
            props.put("mail.smtp.port", "465");
            props.put("mail.smtp.auth", "true");
            
            sess = Session.getDefaultInstance(props, new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(compte.getId(), compte.getPw());
                }
            });
            
        }
        else
        {
            props.put("mail.smtp.port", "25");
            sess = Session.getDefaultInstance(props, null);
        }
        
        
        
        
        sess.setDebug(true);
        
        
        
    }
    public NewMessage() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ExpeTF = new javax.swing.JTextField();
        PourTF = new javax.swing.JTextField();
        SujetTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        MessageBodyTA = new javax.swing.JTextArea();
        SendButton = new javax.swing.JButton();
        CCLabel = new javax.swing.JLabel();
        CCTF = new javax.swing.JTextField();
        AttachementButton = new javax.swing.JButton();
        AttachementLabel = new javax.swing.JLabel();

        jLabel1.setText("Expéditeur: ");

        jLabel2.setText("Pour: ");

        jLabel3.setText("Sujet: ");

        ExpeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpeTFActionPerformed(evt);
            }
        });

        MessageBodyTA.setColumns(20);
        MessageBodyTA.setRows(5);
        jScrollPane1.setViewportView(MessageBodyTA);

        SendButton.setText("Envoyer ->");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        CCLabel.setText("cc: ");

        AttachementButton.setText("Pièces jointes");
        AttachementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttachementButtonActionPerformed(evt);
            }
        });

        AttachementLabel.setText("Attached: NO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SendButton)
                                .addGap(33, 33, 33)
                                .addComponent(AttachementButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AttachementLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                        .addComponent(CCLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ExpeTF, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                                    .addComponent(PourTF, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                                    .addComponent(CCTF)
                                    .addComponent(SujetTF))))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SendButton)
                    .addComponent(AttachementButton)
                    .addComponent(AttachementLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ExpeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PourTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CCLabel)
                    .addComponent(CCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(SujetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        // TODO add your handling code here:
        
        try
        {
            message = new MimeMessage(sess);
            
            message.setFrom(new InternetAddress(compte.getAddress()));
            
            InternetAddress to = new InternetAddress(PourTF.getText());
            
            message.addRecipient(Message.RecipientType.TO, to);
            
            InternetAddress cc;
            
            if(CCTF.getText().length() > 0) {
                cc = new InternetAddress(PourTF.getText()); // Dans un while
                message.addRecipient(Message.RecipientType.CC, cc);
            }
            
            
            
            message.setSubject(SujetTF.getText());
            
            Multipart mp = new MimeMultipart();
            
            MimeBodyPart mbp = new MimeBodyPart();
            mbp.setText(MessageBodyTA.getText());
            mp.addBodyPart(mbp);
                
            for(File f: files) {
                mbp = new MimeBodyPart();
                DataSource so = new FileDataSource(f);
                mbp.setDataHandler(new DataHandler(so));
                mbp.setFileName(f.getName());
                mp.addBodyPart(mbp);
            }
            
            message.setContent(mp);
            
            
            //message.setText(MessageBodyTA.getText());
            
            Transport.send(message);
            
            dispose();
            
            
            
        } catch (AddressException ex) {
            Logger.getLogger(NewMessage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MessagingException ex) {
            Logger.getLogger(NewMessage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SendButtonActionPerformed

    private void ExpeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpeTFActionPerformed

    private void AttachementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachementButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser win = new JFileChooser(new File("."));
        File f;
        
        if(win.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            f = win.getSelectedFile();
            files.add(f);
        }
        
        String att = "Attachements:";
        for(File fi : files)
        {
            att += " " + fi.getName() + ";";
        }
        
        AttachementLabel.setText(att);
        
    }//GEN-LAST:event_AttachementButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMessage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttachementButton;
    private javax.swing.JLabel AttachementLabel;
    private javax.swing.JLabel CCLabel;
    private javax.swing.JTextField CCTF;
    private javax.swing.JTextField ExpeTF;
    private javax.swing.JTextArea MessageBodyTA;
    private javax.swing.JTextField PourTF;
    private javax.swing.JButton SendButton;
    private javax.swing.JTextField SujetTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
