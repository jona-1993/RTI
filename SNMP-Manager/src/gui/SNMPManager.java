/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import network.icmp.Ping;
import network.snmp.*;
import org.snmp4j.event.ResponseEvent;
import org.snmp4j.util.TreeUtils;

/**
 *
 * @author jona1993
 */
public class SNMPManager extends javax.swing.JFrame {

    private SNMP snmp = null;
    private SNMP snmpwr = null;
    /**
     * Creates new form SNMPManager
     */
    public SNMPManager() {
        initComponents();
        
        ApplyButtonActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CommunityTF = new javax.swing.JTextField();
        VersionCB = new javax.swing.JComboBox<>();
        IPAddressTF = new javax.swing.JTextField();
        ApplyButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ActionCB = new javax.swing.JComboBox<>();
        SendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MIBTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        OIDTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ValueTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        CommunityWRTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        VariableCB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Communauté RO:  ");

        jLabel2.setText("Adresse IP: ");

        jLabel3.setText("Version: ");

        CommunityTF.setText("community");
        CommunityTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CommunityTFKeyTyped(evt);
            }
        });

        VersionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        VersionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VersionCBActionPerformed(evt);
            }
        });

        IPAddressTF.setText("192.168.10.100");

        ApplyButton.setText("Confirmer");
        ApplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Action: ");

        ActionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WALK", "SET", "GET", "GETNEXT", "GETBULK" }));
        ActionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionCBActionPerformed(evt);
            }
        });

        SendButton.setText("Envoyer");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        MIBTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OID", "Type", "Value"
            }
        ));
        MIBTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MIBTableMouseClicked(evt);
            }
        });
        MIBTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MIBTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(MIBTable);

        jLabel5.setText("OPTIONS");

        jLabel6.setText("OID: ");

        OIDTF.setEnabled(false);

        jLabel7.setText("Value: ");

        ValueTF.setEnabled(false);
        ValueTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValueTFActionPerformed(evt);
            }
        });

        jLabel8.setText("Community WR: ");

        CommunityWRTF.setText("communityrw");
        CommunityWRTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CommunityWRTFKeyTyped(evt);
            }
        });

        jLabel9.setText("Variable: ");

        VariableCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sélection", "Description", "Contact", "Name", "Location" }));
        VariableCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VariableCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(ApplyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(21, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(CommunityWRTF, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(VersionCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addComponent(CommunityTF, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))))
                        .addGap(46, 46, 46)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel9)
                        .addGap(33, 33, 33)
                        .addComponent(VariableCB, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IPAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ActionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(OIDTF)
                    .addComponent(ValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(CommunityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(CommunityWRTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VersionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(ApplyButton)
                        .addGap(96, 96, 96))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(VariableCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(OIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(IPAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(ValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ActionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ApplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyButtonActionPerformed
        try {
            // TODO add your handling code here:
            snmp = new SNMP(Integer.parseInt(VersionCB.getSelectedItem().toString()), CommunityTF.getText());
            snmpwr = new SNMP(Integer.parseInt(VersionCB.getSelectedItem().toString()), CommunityWRTF.getText());
        } catch (IOException ex) {
            Logger.getLogger(SNMPManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        ApplyButton.setEnabled(false);
    }//GEN-LAST:event_ApplyButtonActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        // TODO add your handling code here:
        
        try
        {
            
            Ping ping = new Ping(IPAddressTF.getText());
            
            int test = ping.isAlive();
            
            System.err.println("Resultat du ping: " + test);
            
            if(test == 1)
            {
                SNMPListener listener;
                
                try
                {
                    switch(ActionCB.getSelectedItem().toString())
                    {
                        case "SET":
                                snmpwr.set(OIDTF.getText(), ValueTF.getText(), IPAddressTF.getText());
                        case "GET": listener = new SNMPListener(MIBTable);
                                snmp.getAsync(OIDTF.getText(), IPAddressTF.getText(), SNMP.GET, listener);
                                break;
                        case "GETNEXT": listener = new SNMPListener(MIBTable);
                                snmp.getAsync(OIDTF.getText(), IPAddressTF.getText(), SNMP.GET_BULK, listener);
                                break;
                        case "GETBULK": listener = new SNMPListener(MIBTable);
                                snmp.getAsync(OIDTF.getText(), IPAddressTF.getText(), SNMP.GET_NEXT, listener);
                                break;
                        case "WALK": snmp.walk(IPAddressTF.getText(), MIBTable);
                                break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(SNMPManager.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
            else
            {
                System.err.println("DEAD");
            }
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(SNMPManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SendButtonActionPerformed

    private void CommunityTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CommunityTFKeyTyped
        // TODO add your handling code here:
        ApplyButton.setEnabled(true);
    }//GEN-LAST:event_CommunityTFKeyTyped

    private void VersionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VersionCBActionPerformed
        // TODO add your handling code here:
        ApplyButton.setEnabled(true);
    }//GEN-LAST:event_VersionCBActionPerformed

    private void MIBTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MIBTableKeyReleased
        // TODO add your handling code here:
        OIDTF.setText(MIBTable.getModel().getValueAt(MIBTable.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_MIBTableKeyReleased

    private void MIBTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MIBTableMouseClicked
        // TODO add your handling code here:
        OIDTF.setText(MIBTable.getModel().getValueAt(MIBTable.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_MIBTableMouseClicked

    private void ActionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionCBActionPerformed
        // TODO add your handling code here:
        
        if(ActionCB.getSelectedItem().toString().compareTo("SET") == 0)
            ValueTF.setEnabled(true);
        else
            ValueTF.setEnabled(false);
        
        if(ActionCB.getSelectedItem().toString().compareTo("WALK") == 0)
            OIDTF.setEnabled(false);
        else
            OIDTF.setEnabled(true);
    }//GEN-LAST:event_ActionCBActionPerformed

    private void ValueTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValueTFActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ValueTFActionPerformed

    private void CommunityWRTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CommunityWRTFKeyTyped
        // TODO add your handling code here:
        ApplyButton.setEnabled(true);
    }//GEN-LAST:event_CommunityWRTFKeyTyped

    private void VariableCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VariableCBActionPerformed
        // TODO add your handling code here:
        switch(VariableCB.getSelectedItem().toString())
        {
            case "Description":
                OIDTF.setText("1.3.6.1.2.1.1.1.0");
                break;
            case "Contact":
                OIDTF.setText("1.3.6.1.2.1.1.4.0");
                break;
            case "Name":
                OIDTF.setText("1.3.6.1.2.1.1.5.0");
                break;
            case "Location":
                OIDTF.setText("1.3.6.1.2.1.1.6.0");
                break;
        }
    }//GEN-LAST:event_VariableCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SNMPManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SNMPManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SNMPManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SNMPManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SNMPManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ActionCB;
    private javax.swing.JButton ApplyButton;
    private javax.swing.JTextField CommunityTF;
    private javax.swing.JTextField CommunityWRTF;
    private javax.swing.JTextField IPAddressTF;
    private javax.swing.JTable MIBTable;
    private javax.swing.JTextField OIDTF;
    private javax.swing.JButton SendButton;
    private javax.swing.JTextField ValueTF;
    private javax.swing.JComboBox<String> VariableCB;
    private javax.swing.JComboBox<String> VersionCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
