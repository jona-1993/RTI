/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.*;
import java.net.Socket;
import java.security.MessageDigest;
import java.util.Hashtable;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import network.request.HOLICOPResponse;
import network.request.Request;
import java.security.*;
import java.util.Date;
import java.util.Scanner;
import network.security.digest.BCDigest;
/**
 *
 * @author jona1993
 */
public class LoginGUI extends javax.swing.JFrame {
    private ObjectInputStream ois;
    private ObjectOutputStream oos;
    private Socket soc;
    private Request req;
    private Hashtable<String, String> hash;
    //private MessageDigest digest;
    //private String provider = "BC";
    
    /**
     * Creates new form LoginGUI
     */
    public LoginGUI() {
        initComponents();
        
        Properties prop = new Properties();
        InputStream in = null;
        
        hash = new Hashtable<String, String>();
        
        try
        {
            in = new FileInputStream("settings.properties");
            
            prop.load(in);
            
            hash.put("PortServer", prop.getProperty("PortServer"));
            hash.put("IpServer", prop.getProperty("IpServer"));
            hash.put("LocalIp", prop.getProperty("LocalIp"));
        }
        catch(IOException e)
        {
            System.err.println(e.getMessage());
        }
        finally
        {
            if(in != null)
                try {
                    in.close();
            } catch (IOException ex) {
                    System.err.println(ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LoginTF = new javax.swing.JTextField();
        PasswordTF = new javax.swing.JPasswordField();
        VoyageurCB = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        ReservCB = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("LOGIN");

        jLabel2.setText("login: ");

        jLabel3.setText("password: ");

        VoyageurCB.setSelected(true);
        VoyageurCB.setText("Voyageur?");

        jLabel4.setText("ID Reservation:");

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VoyageurCB)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LoginTF)
                                    .addComponent(PasswordTF, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReservCB, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jButton1)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LoginTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(PasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(VoyageurCB)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ReservCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BCDigest digest;
        byte[] newdig = null;
        HOLICOPResponse rep;
        
        
        try
        {
            
            soc = new Socket(hash.get("IpServer"), Integer.parseInt(hash.get("PortServer")));
            System.err.println("LISTEN");
            
            digest = new BCDigest("SHA-512");
            
            newdig = digest.CreateSaledDigest(LoginTF.getText(), PasswordTF.getText());
            
            
            System.err.println("DIGEST GENERATED = " + newdig + " TEMPS = " + digest.getTemps() + " ALEA = " + digest.getAlea());
            
            
            req = new Request(Request.REQUEST_HOLICOP, LoginTF.getText(), "Login_Group", soc);
            
            oos = new ObjectOutputStream(soc.getOutputStream());
            ois = new ObjectInputStream(soc.getInputStream());
           
            
            oos.writeObject(req);
            oos.flush();
            
            if(VoyageurCB.isSelected())
            {
                if(ReservCB.getText().length() < 1)
                {
                    JOptionPane.showMessageDialog(null, "Vous devez insérer un numéro de réservation !", "Id Reservation manquant", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                
                oos.writeObject(new HOLICOPResponse(HOLICOPResponse.OK, String.valueOf(Integer.parseInt(ReservCB.getText())), newdig, digest.getTemps() , digest.getAlea(), "Login_Group"));
            }
            else
            {
                oos.writeObject(new HOLICOPResponse(HOLICOPResponse.OK, null, newdig, digest.getTemps() , digest.getAlea(), "Login_Group"));
            }
            
            
            oos.flush();
            
            rep = (HOLICOPResponse)ois.readObject();
            Scanner scan = new Scanner(rep.getChargeUtile());
            scan.useDelimiter("#");
            ChatGUI win;
            switch(rep.getCode())
            {
                case HOLICOPResponse.OK:
                    if(ReservCB.getText().length() > 0)
                        win = new ChatGUI(LoginTF.getText(), scan.next(), scan.next(), ReservCB.getText(), hash.get("LocalIp"));
                    else
                        win = new ChatGUI(LoginTF.getText(), scan.next(), scan.next(), null, hash.get("LocalIp"));
                    
                    this.setVisible(false);
                    win.setModal(true);
                    win.setVisible(true);
                    this.setVisible(true);
                    break;
                case HOLICOPResponse.NOK:
                    JOptionPane.showMessageDialog(null, "Login ou Password invalide !", "Authentification impossible", JOptionPane.WARNING_MESSAGE);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Une erreur est survenue, veuillez réessayer ultérieurement !", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(IOException e){
            //Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, e);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchProviderException ex) {
            Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LoginTF;
    private javax.swing.JPasswordField PasswordTF;
    private javax.swing.JTextField ReservCB;
    private javax.swing.JCheckBox VoyageurCB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
